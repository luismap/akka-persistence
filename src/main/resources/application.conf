akka.persistence.journal.plugin="akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/snapshots"
akka.persistence.journal.leveldb.dir="target/journal"
#akka.persistence.journal.leveldb.native= false

localStores {
akka.persistence.journal.plugin="akka.persistence.journal.leveldb"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/local-stores/snapshots"
akka.persistence.journal.leveldb.dir="target/local-stores/journal"
akka.persistence.journal.leveldb.compaction-intervals {
    spac01 = 100 # every 100 events do compaction
    "*" = 200
    }
}

postgresStore {
   akka.persistence.journal.plugin="jdbc-journal"
   akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

  akka-persistence-jdbc  {
    shared-databases {
      slick {
        profile = "slick.jdbc.PostgresProfile$"
        db {
          numThreads = 10
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://localhost:5432/rtjvm"
          user = "docker"
          password = "docker"
        }
      }
    }
  }

  jdbc-journal.use-shared-db="slick"
  jdbc-snapshot-store.use-shared-db="slick"
}

cassandraStore {
  akka.persistence.journal.plugin="cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
}

customSerializer {
  akka.persistence.journal.plugin="cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

  akka.actor {
    //declared available serializers
    serializers {
      java ="akka.serialization.JavaSerializer"
      ur-serializer = "serialization.serializers.UserRegistrationSerializer"
    }

    serialization-bindings {
      //bind serializers to events
      "serialization.UserRegistrationActor$UserRegistered" = ur-serializer
      //all other events will bind by default java serializers
    }
  }
}

eventAdapters {
  akka.persistence.journal.plugin="cassandra-journal"
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"

  cassandra-journal { //same name as in journarl.plugin
    event-adapters {
      //any-name-for your adaptter
      inventory-guitar-adapter = "patternsAndBestPractices.EventAdapters$GuitarReadEventAdapter"
    }
    event-adapter-bindings {
      //choose event that will be converted
      "patternsAndBestPractices.EventAdapters$GuitarAdded" = inventory-guitar-adapter
    }
  }


  akka.actor {
    //declared available serializers
    serializers {
      java ="akka.serialization.JavaSerializer"
      ga-serializer = "serialization.serializers.GuitarAddedSerializer"
      gaV2-serializer = "serialization.serializers.GuitarAddedV2Serializer"
    }

    serialization-bindings {
      //bind serializers to events
      "patternsAndBestPractices.EventAdapters$GuitarAdded" = ga-serializer
      "patternsAndBestPractices.EventAdapters$GuitarAddedV2" = gaV2-serializer
      //all other events will bind by default java serializers
    }
  }
}